// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @unique @default(uuid())
  username String @unique
  password String 
  avatarId String?
  role Role
  spaces Space[]
  avatar  Avatar? @relation(fields: [avatarId],references: [id])
}

model Space{
  id String @id @unique @default(uuid())
  name String
  width Int
  height Int
  thumbnail String?
  creatorId String
  creator User @relation(fields: [creatorId],references: [id])
  elements  spaceElements[]
}

model Element {
  id              String @id @unique @default(cuid())
  width           Int
  height          Int
  static          Boolean
  imageUrl        String
  spaces          spaceElements[]
  mapElements     mapElements[]
}

model spaceElements{
  id String @id @default(uuid()) @unique
  elementId String
  spaceId String
  x Int 
  y Int
  element Element @relation(fields: [elementId],references: [id])
  space Space @relation(fields: [spaceId],references: [id])
}

model Map{
  id String  @id @unique @default(cuid())
  width Int
  height Int
  name String
  thumbnail String
  mapElements mapElements[]
}

model mapElements{
  id  String @id @unique @default(cuid())
  mapId String
  elementId  String
  x     Int?
  y     Int?
  map   Map  @relation(fields: [mapId],references: [id])
  element Element @relation(fields: [elementId],references: [id])
}

model Avatar{
  id String @id @default(cuid())
  imageUrl String?
  name String?
  users User[]
}


enum Role{
  user
  admin
}
